
12, 11, 13, 5, 6

Let us loop for i = 1 (second element of the array) to 5 (Size of input array)

i = 1. Since 11 is smaller than 12, move 12 and insert 11 before 12
11, 12, 13, 5, 6

i = 2. 13 will remain at its position as all elements in A[0..I-1] are smaller than 13
11, 12, 13, 5, 6

i = 3. 5 will move to the beginning and all other elements from 11 to 13 will move one position ahead of their current position.
5, 11, 12, 13, 6

i = 4. 6 will move to position after 5, and elements from 11 to 13 will move one position ahead of their current position.
5, 6, 11, 12, 13


#include <iostream>
#include <string>
#include <vector>
#include <unordered_set>

void InsertionSort(std::vector<int> &input)
{
 for (int i = 1 ; i < input.size()   ; i++)
 {
     int key = input[i];
     int j = i -1;
     std::cout <<  "i=" << i << "|j=" << j << "|key=" << key << "|input[j]=" << input[j] << "\n";
     while ( j >= 0 && input[j] > key) 
     {
         std::cout <<  "i=" << i << "|j=" << j << "|key=" << key << "|input[j]=" << input[j] << "|input[j+1]=" << input[j+1] << "\n";
         input[j+1] = input[j];
         j--;
     }
     input[j+1] = key;
 }
}

void printVec(std::vector<int> vecInput, std::string label = "vector")
{
    std::cout << label << "=[";
    for (int token : vecInput) std::cout << token << "," ;
    std::cout << "]\n";
}
int main()
{
    std::vector<int> vecInput {1,5,4,3,2};
    InsertionSort(vecInput);
    printVec(vecInput);   
  
}


Output
==============
i=1|j=0|key=5|input[j]=1
i=2|j=1|key=4|input[j]=5
i=2|j=1|key=4|input[j]=5|input[j+1]=4
i=3|j=2|key=3|input[j]=5
i=3|j=2|key=3|input[j]=5|input[j+1]=3
i=3|j=1|key=3|input[j]=4|input[j+1]=5
i=4|j=3|key=2|input[j]=5
i=4|j=3|key=2|input[j]=5|input[j+1]=2
i=4|j=2|key=2|input[j]=4|input[j+1]=5
i=4|j=1|key=2|input[j]=3|input[j+1]=4
vector=[1,2,3,4,5,]
