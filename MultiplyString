class Solution {
public:
    string multiply(string num1, string num2) {
    if  ( num1.size() <=0 || num2.size() <=0 )
        return "0";
    reverse(num1.begin(),num1.end());
    reverse(num2.begin(),num2.end());
    string result(num1.size()+num2.size()+1,'0');

    for (int i = 0;i <num1.size();i++ )
    {
        int dig1 = num1[i] - '0';
        int carry = 0;
        for ( int j = 0 ; j < num2.size();j++) {
            int temp = result[i+j] -'0';
            int dig2 = num2[j] -'0';
            int mul = dig1 * dig2 + temp + carry;
            result[i+j] = mul%10 +'0';
            carry = mul/10;
        }
        result[i+num2.size()] = carry + '0';
    }
    reverse(result.begin(),result.end());
    int pos  = result.find_first_not_of('0',0);
    if ( pos <0 || pos >= result.size())
        pos = result.size() -1;
    return result.substr(pos,result.size()-pos);
        
    }
};

